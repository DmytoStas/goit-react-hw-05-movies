{"version":3,"file":"static/js/554.03729d15.chunk.js","mappings":"uQAkCA,EA9B2B,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cACpC,OACE,+BACE,wBACGD,EAAOE,KAAI,SAAAC,GACV,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACnB,OACE,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,iBAAYJ,GAAMK,MAAOR,EAAjC,SACGI,GAASC,KAFLF,EAMZ,OAIR,ECfKM,EAAY,IAAIC,EAAAA,EA2BtB,EAzBa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAW,mCAAG,6GAEGP,EAAUQ,YAFb,OAEVC,EAFU,OAGhBN,EAAUM,EAAKC,SAHC,gDAKhBC,QAAQC,IAAI,yBAAZ,MALgB,yDAAH,qDASjB,OACE,iCACE,6CACA,SAACC,EAAD,CAAoBvB,OAAQA,EAAQC,cAAea,MAGxD,C,uGC/BoBH,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,KACnBa,SAAW,gCAAgC,KAE3CC,aACE,sNAAsN,KAExNC,gBAAkB,CAChBC,QAAS,CACPC,cAAc,UAAD,OAAYC,KAAKJ,cAC9B,eAAgB,oBAHF,CA2DlB,OA3DkB,oEAOlB,oGACqBK,MAAM,GAAD,OACnBD,KAAKL,SADc,oBAEtBK,KAAKH,iBAHT,WACQK,EADR,QAMYC,GANZ,sBAOU,IAAIC,MAPd,gCAUSF,EAAKG,QAVd,kGAPkB,IAOlB,yDAaA,WAAeC,GAAf,uFACqBL,MAAM,GAAD,OACnBD,KAAKL,SADc,8BACgBW,EAAMC,QAC5CP,KAAKH,iBAHT,WACQK,EADR,QAMYC,GANZ,sBAOU,IAAIC,MAPd,gCAUSF,EAAKG,QAVd,mGAbA,IAaA,gEAaA,WAAsBG,GAAtB,uFACqBP,MAAM,GAAD,OACnBD,KAAKL,SADc,iBACGa,GACzBR,KAAKH,iBAHT,WACQK,EADR,QAMYC,GANZ,sBAOU,IAAIC,MAPd,gCAUSF,EAAKG,QAVd,mGAbA,IAaA,gEAaA,WAAsBG,GAAtB,uFACqBP,MAAM,GAAD,OACnBD,KAAKL,SADc,iBACGa,EADH,YAEtBR,KAAKH,iBAHT,WACQK,EADR,QAMYC,GANZ,sBAOU,IAAIC,MAPd,gCAUSF,EAAKG,QAVd,mGAbA,IAaA,gEAaA,WAAsBG,GAAtB,uFACqBP,MAAM,GAAD,OACnBD,KAAKL,SADc,iBACGa,EADH,YAEtBR,KAAKH,iBAHT,WACQK,EADR,QAMYC,GANZ,sBAOU,IAAIC,MAPd,gCAUSF,EAAKG,QAVd,mGAbA,MAaA,EAjEmBvB,E","sources":["components/TrendingMovies/TrendingMovies.jsx","pages/Home/Home.jsx","services/moviesAPIService.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nconst TrendingMoviesList = ({ movies, locationState }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => {\n          const { id, title, name } = movie;\n          return (\n            <li key={id}>\n              <Link to={`movies/${id}`} state={locationState}>\n                {title || name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nTrendingMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n  locationState: PropTypes.object.isRequired,\n};\n\nexport default TrendingMoviesList;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport MoviesAPIService from 'services/moviesAPIService';\nimport TrendingMoviesList from 'components/TrendingMovies';\n\nconst moviesAPI = new MoviesAPIService();\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrends();\n  }, []);\n\n  const fetchTrends = async () => {\n    try {\n      const data = await moviesAPI.getTrends();\n      setMovies(data.results);\n    } catch (e) {\n      console.log('Error fetching trends:', e);\n    }\n  };\n\n  return (\n    <>\n      <h1> Trending today</h1>\n      <TrendingMoviesList movies={movies} locationState={location} />\n    </>\n  );\n};\n\nexport default Home;\n","export default class MoviesAPIService {\n  BASE_URL = 'https://api.themoviedb.org/3/';\n\n  ACCESS_TOKEN =\n    'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNTNmNDQ0YzhjOTIzYjEwNGFiMzkzZDlmZmY0NzM3NSIsInN1YiI6IjY0NzUyYTBiYzI4MjNhMDBjNDIxNDA3OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wJ9yqsOyNyT3w7GuPXqWWQIZSuAsjemKs2vv1aIwq24';\n\n  REQUEST_OPTIONS = {\n    headers: {\n      Authorization: `Bearer ${this.ACCESS_TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  async getTrends() {\n    const resp = await fetch(\n      `${this.BASE_URL}trending/all/day`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n\n  async getQuery(query) {\n    const resp = await fetch(\n      `${this.BASE_URL}search/movie?query=${query.trim()}`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n\n  async getMovieDetails(movieID) {\n    const resp = await fetch(\n      `${this.BASE_URL}movie/${movieID}`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n\n  async getMovieCredits(movieID) {\n    const resp = await fetch(\n      `${this.BASE_URL}movie/${movieID}/credits`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n\n  async getMovieReviews(movieID) {\n    const resp = await fetch(\n      `${this.BASE_URL}movie/${movieID}/reviews`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n}\n"],"names":["movies","locationState","map","movie","id","title","name","Link","to","state","moviesAPI","MoviesAPIService","useState","setMovies","location","useLocation","useEffect","fetchTrends","getTrends","data","results","console","log","TrendingMovies","BASE_URL","ACCESS_TOKEN","REQUEST_OPTIONS","headers","Authorization","this","fetch","resp","ok","Error","json","query","trim","movieID"],"sourceRoot":""}