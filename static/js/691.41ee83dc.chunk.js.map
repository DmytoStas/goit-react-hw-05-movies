{"version":3,"file":"static/js/691.41ee83dc.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MoviesDetails/MovieDetails.styled.jsx","pages/MoviesDetails/MoviesDetails.jsx","services/moviesAPIService.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst MovieCardContainer = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nconst MovieCardIMG = styled.img`\n  width: 200px;\n`;\n\nexport { MovieCardContainer, MovieCardIMG };\n","import PropTypes from 'prop-types';\n\nimport { MovieCardContainer, MovieCardIMG } from './MovieCard.styled';\n\nconst MovieCard = ({ movieDetails }) => {\n  const {\n    title,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n    release_date,\n  } = movieDetails;\n\n  const pathIMG = `https://image.tmdb.org/t/p/w342/${poster_path}`;\n  const scorePercentage = Math.round((vote_average / 10) * 100);\n  const movieGenres =\n    genres && genres.length >= 1\n      ? genres.map(genre => genre.name).join(', ')\n      : 'No genres';\n\n  return (\n    <MovieCardContainer>\n      <MovieCardIMG src={pathIMG} alt={title} />\n      <div>\n        <h1>\n          {title || original_title} ({release_date.slice(0, 4)})\n        </h1>\n        <p>User Score: {scorePercentage}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{movieGenres}</p>\n      </div>\n    </MovieCardContainer>\n  );\n};\n\nMovieCard.propTypes = {\n  movieDetails: PropTypes.shape({\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst AdditionalInfo = styled.p`\n&::before {\n    content: '';\n    display: block;\n    margin-bottom: 20px;\n    width: 100%;\n    height: 1px;\n    background-color: #e7e9fc;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n`;\n\nconst StyledLink = styled(NavLink)`\n  box-shadow: inset 0px 1px 0px 0px #ffffff;\n  background: linear-gradient(to bottom, #f9f9f9 5%, #e9e9e9 100%);\n  background-color: #f9f9f9;\n  border-radius: 6px;\n  border: 1px solid #dcdcdc;\n  display: inline-block;\n  cursor: pointer;\n  color: #666666;\n  font-family: Arial;\n  font-size: 15px;\n  font-weight: bold;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #ffffff;\n\n  &:hover {\n    background: linear-gradient(to bottom, #e9e9e9 5%, #f9f9f9 100%);\n    background-color: #e9e9e9;\n  }\n`;\n\nconst AddInfoListWrapp = styled.div`\n&::after {\n    content: '';\n    display: block;\n    margin-bottom: 20px;\n    width: 100%;\n    height: 1px;\n    background-color: #e7e9fc;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n`;\n\nexport { AdditionalInfo, StyledLink, AddInfoListWrapp };\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState, Suspense } from 'react';\nimport MovieCard from '../../components/MovieCard';\nimport MoviesAPIService from 'services/moviesAPIService';\nimport {\n  AddInfoListWrapp,\n  AdditionalInfo,\n  StyledLink,\n} from './MovieDetails.styled';\n\nconst moviesAPI = new MoviesAPIService();\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const firstMountRef = useRef(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await moviesAPI.getMovieDetails(movieId);\n        setDetails(data);\n      } catch (e) {\n        console.log('Error fetching movie details:', e);\n      }\n    };\n\n    fetchMovieDetails();\n\n    firstMountRef.current = true;\n  }, [movieId]);\n\n  return (\n    <>\n      <StyledLink to={backLinkLocationRef.current}>Go back</StyledLink>\n      {firstMountRef.current && <MovieCard movieDetails={details} />}\n      <AdditionalInfo>Additional information</AdditionalInfo>\n      <AddInfoListWrapp>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AddInfoListWrapp>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","export default class MoviesAPIService {\n  BASE_URL = 'https://api.themoviedb.org/3/';\n\n  ACCESS_TOKEN =\n    'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNTNmNDQ0YzhjOTIzYjEwNGFiMzkzZDlmZmY0NzM3NSIsInN1YiI6IjY0NzUyYTBiYzI4MjNhMDBjNDIxNDA3OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wJ9yqsOyNyT3w7GuPXqWWQIZSuAsjemKs2vv1aIwq24';\n\n  REQUEST_OPTIONS = {\n    headers: {\n      Authorization: `Bearer ${this.ACCESS_TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n  };\n\n  async getTrends() {\n    const resp = await fetch(\n      `${this.BASE_URL}trending/all/day`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n\n  async getQuery(query) {\n    const resp = await fetch(\n      `${this.BASE_URL}search/movie?query=${query.trim()}`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n\n  async getMovieDetails(movieID) {\n    const resp = await fetch(\n      `${this.BASE_URL}movie/${movieID}`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n\n  async getMovieCredits(movieID) {\n    const resp = await fetch(\n      `${this.BASE_URL}movie/${movieID}/credits`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n\n  async getMovieReviews(movieID) {\n    const resp = await fetch(\n      `${this.BASE_URL}movie/${movieID}/reviews`,\n      this.REQUEST_OPTIONS\n    );\n\n    if (!resp.ok) {\n      throw new Error();\n    }\n\n    return resp.json();\n  }\n}\n"],"names":["MovieCardContainer","styled","MovieCardIMG","movieDetails","title","original_title","vote_average","overview","genres","poster_path","release_date","pathIMG","scorePercentage","Math","round","movieGenres","length","map","genre","name","join","src","alt","slice","AdditionalInfo","StyledLink","NavLink","AddInfoListWrapp","moviesAPI","MoviesAPIService","useState","details","setDetails","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","firstMountRef","useEffect","fetchMovieDetails","getMovieDetails","data","console","log","current","to","Link","Suspense","fallback","BASE_URL","ACCESS_TOKEN","REQUEST_OPTIONS","headers","Authorization","this","fetch","resp","ok","Error","json","query","trim","movieID"],"sourceRoot":""}